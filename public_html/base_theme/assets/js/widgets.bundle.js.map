{"version":3,"file":"js/widgets.bundle.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;AC1Ka;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;AC3Ea;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;AC3Ea;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;ACpKa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC/JY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;AC/JY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC7JY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;ACpLa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACxLY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;AChLa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,qDAAqD;AACrD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK,MAAM,UAAU,GAAG,OAAO;AAC9E,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,GAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC5UY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,GAAG,OAAO;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC/MY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,UAAU,GAAG,OAAO;AACnD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACvPY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,UAAU,GAAG,OAAO;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC3PY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,yFAAyF;AAC3G,kBAAkB,wFAAwF;AAC1G,kBAAkB,yFAAyF;AAC3G,kBAAkB,yFAAyF;AAC3G,kBAAkB,sFAAsF;AACxG,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACrGY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACtKY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC9KY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC9KY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;AC/Ga;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;ACzJa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;ACjKa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;AC/La;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;AC7Ka;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA,aAAa;AACb;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS,GAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChIY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACnFY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD,kBAAkB,8BAA8B;AAChD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChRY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACpEY;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,qBAAqB;AACpH,iBAAiB;AACjB;AACA,4DAA4D,YAAY;AACxE,4EAA4E,YAAY,+CAA+C,eAAe;AACtJ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF,aAAa;AAC9F;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,qBAAqB;AACpH,iBAAiB;AACjB;AACA,4DAA4D,YAAY;AACxE,4EAA4E,YAAY,+CAA+C,eAAe;AACtJ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF,aAAa;AAC9F;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,qBAAqB;AACpH,iBAAiB;AACjB;AACA,4DAA4D,YAAY;AACxE,4EAA4E,YAAY,+CAA+C,eAAe;AACtJ;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iFAAiF,aAAa;AAC9F;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,IAAI,IAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;UClkBD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://metronic/../demo1/src/js/widgets/cards/widget-1.js","webpack://metronic/../demo1/src/js/widgets/cards/widget-10.js","webpack://metronic/../demo1/src/js/widgets/cards/widget-4.js","webpack://metronic/../demo1/src/js/widgets/cards/widget-6.js","webpack://metronic/../demo1/src/js/widgets/cards/widget-8.js","webpack://metronic/../demo1/src/js/widgets/cards/widget-9.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-1.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-10.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-11.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-12.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-13.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-14.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-15.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-16.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-17.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-2.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-3.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-4.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-5.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-6.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-7.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-8.js","webpack://metronic/../demo1/src/js/widgets/charts/widget-9.js","webpack://metronic/../demo1/src/js/widgets/maps/widget-1.js","webpack://metronic/../demo1/src/js/widgets/tables/widget-3.js","webpack://metronic/../demo1/src/js/widgets/tables/widget-4.js","webpack://metronic/../demo1/src/js/widgets/tables/widget-5.js","webpack://metronic/../demo1/src/js/widgets/timeline/widget-1.js","webpack://metronic/webpack/bootstrap","webpack://metronic/webpack/before-startup","webpack://metronic/webpack/startup","webpack://metronic/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTCardsWidget1 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_card_widget_1_chart\");\r\n        \r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var color = element.getAttribute('data-kt-chart-color');\r\n        \r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');         \r\n        var baseColor = KTUtil.isHexColor(color) ? color : KTUtil.getCssVariableValue('--bs-' + color);\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');        \r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 75, 55, 45, 30, 60, 75, 50],\r\n                margin: {\r\n\t\t\t\t\tleft: 5,\r\n\t\t\t\t\tright: 5\r\n\t\t\t\t}   \r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['35%'],\r\n                    borderRadius: 6\r\n                }\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 4,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {                \r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },               \r\n                crosshairs: {\r\n                    show: false\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                type: 'solid'\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                x: {\r\n                    formatter: function (val) {\r\n                        return \"Impression: \" + val\r\n                    }\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" revenue\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: false,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },\r\n                padding: {\r\n                    top: 10,\r\n\t\t\t\t\tleft: 25,\r\n\t\t\t\t\tright: 25     \r\n\t\t\t\t}               \r\n            }\r\n        };\r\n\r\n        // Set timeout to properly get the parent elements width\r\n        var chart = new ApexCharts(element, options);\r\n        \r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);  \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTCardsWidget1;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTCardsWidget1.init();\r\n});\r\n   \r\n        \r\n        \r\n        \r\n           ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTCardsWidget10 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var el = document.getElementById('kt_card_widget_10_chart'); \r\n\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\r\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\r\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \r\n            //percent:  el.getAttribute('data-kt-percent') ,\r\n        }\r\n\r\n        var canvas = document.createElement('canvas');\r\n        var span = document.createElement('span'); \r\n            \r\n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\r\n            G_vmlCanvasManager.initElement(canvas);\r\n        }\r\n\r\n        var ctx = canvas.getContext('2d');\r\n        canvas.width = canvas.height = options.size;\r\n\r\n        el.appendChild(span);\r\n        el.appendChild(canvas);\r\n\r\n        ctx.translate(options.size / 2, options.size / 2); // change center\r\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\r\n\r\n        //imd = ctx.getImageData(0, 0, 240, 240);\r\n        var radius = (options.size - options.lineWidth) / 2;\r\n\r\n        var drawCircle = function(color, lineWidth, percent) {\r\n            percent = Math.min(Math.max(0, percent || 1), 1);\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\r\n            ctx.strokeStyle = color;\r\n            ctx.lineCap = 'round'; // butt, round or square\r\n            ctx.lineWidth = lineWidth\r\n            ctx.stroke();\r\n        };\r\n\r\n        // Init \r\n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \r\n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\r\n        drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);   \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTCardsWidget10;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTCardsWidget10.init();\r\n});\r\n   \r\n        \r\n        \r\n        \r\n           ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTCardsWidget4 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var el = document.getElementById('kt_card_widget_4_chart'); \r\n\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\r\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\r\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \r\n            //percent:  el.getAttribute('data-kt-percent') ,\r\n        }\r\n\r\n        var canvas = document.createElement('canvas');\r\n        var span = document.createElement('span'); \r\n            \r\n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\r\n            G_vmlCanvasManager.initElement(canvas);\r\n        }\r\n\r\n        var ctx = canvas.getContext('2d');\r\n        canvas.width = canvas.height = options.size;\r\n\r\n        el.appendChild(span);\r\n        el.appendChild(canvas);\r\n\r\n        ctx.translate(options.size / 2, options.size / 2); // change center\r\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\r\n\r\n        //imd = ctx.getImageData(0, 0, 240, 240);\r\n        var radius = (options.size - options.lineWidth) / 2;\r\n\r\n        var drawCircle = function(color, lineWidth, percent) {\r\n            percent = Math.min(Math.max(0, percent || 1), 1);\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\r\n            ctx.strokeStyle = color;\r\n            ctx.lineCap = 'round'; // butt, round or square\r\n            ctx.lineWidth = lineWidth\r\n            ctx.stroke();\r\n        };\r\n\r\n        // Init \r\n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \r\n        drawCircle(KTUtil.getCssVariableValue('--bs-danger'), options.lineWidth, 100 / 150);\r\n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 250);   \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTCardsWidget4;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTCardsWidget4.init();\r\n});\r\n   \r\n        \r\n        \r\n        \r\n           ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTCardsWidget6 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_card_widget_6_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Sales',\r\n                data: [30, 60, 53, 45, 60, 75, 53]\r\n            }, ],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['55%'],\r\n                    borderRadius: 6\r\n                }\r\n            },\r\n            legend: {\r\n                show: false,\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 9,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {                \r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false,\r\n                    tickPlacement: 'between'\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                type: 'solid'\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                x: {\r\n                    formatter: function (val) {\r\n                        return 'Impressions: ' + val;\r\n                    }\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                padding: {\r\n                    left: 10,\r\n                    right: 10\r\n                },\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }             \r\n            }\r\n        }; \r\n\r\n        var chart = new ApexCharts(element, options);\r\n        \r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);     \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTCardsWidget6;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTCardsWidget6.init();\r\n});\r\n   \r\n        \r\n        \r\n        \r\n           ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTCardWidget8 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_card_widget_8_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));       \r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\r\n        var lightColor = KTUtil.getCssVariableValue('--bs-light-info');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [35, 25, 45, 15, 60, 50, 57, 35, 70, 40, 45, 25, 45, 30, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },             \r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 0\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {                 \r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                x: {\r\n                    formatter: function (val) {\r\n                        return \"Impression \" + val;\r\n                    }\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {                 \r\n                strokeDashArray: 4,\r\n                padding: {\r\n                    top: 0,\r\n                    right: -20,\r\n                    bottom: -20,\r\n                    left: -20\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 2\r\n            }\r\n        }; \r\n\r\n        var chart = new ApexCharts(element, options);\r\n        \r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);  \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTCardWidget8;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTCardWidget8.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTCardWidget9 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_card_widget_9_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));       \r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\r\n        var lightColor = KTUtil.getCssVariableValue('--bs-light-info');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [35, 25, 35, 15, 40, 60, 25, 40, 70, 30, 55, 45, 45, 30, 50]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },             \r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 0\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {                 \r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                x: {\r\n                    formatter: function (val) {\r\n                        return \"Sales \" + val;\r\n                    }\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {                 \r\n                strokeDashArray: 4,\r\n                padding: {\r\n                    top: 0,\r\n                    right: -20,\r\n                    bottom: -20,\r\n                    left: -20\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 2\r\n            }\r\n        }; \r\n\r\n        var chart = new ApexCharts(element, options);\r\n        \r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);  \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTCardWidget9;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTCardWidget9.init();\r\n});","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget1 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_1\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var negativeColor = element.hasAttribute('data-kt-negative-color') ? element.getAttribute('data-kt-negative-color') : KTUtil.getCssVariableValue('--bs-success');\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [20, 30, 20, 40, 60, 75, 65, 18, 10, 5, 15, 40, 60, 18, 35, 55, 20]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [-20, -15, -5, -20, -30, -15, -10, -8, -5, -5, -10, -25, -15, -5, -10, -5, -15]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                stacked: true,\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    //horizontal: false,\r\n                    columnWidth: \"35%\",\r\n                    barHeight: \"70%\",\r\n                    borderRadius: [6, 6]\r\n                }\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            xaxis: {\r\n                categories: ['Jan 5', 'Jan 7', 'Jan 9', 'Jan 11', 'Jan 13', 'Jan 15', 'Jan 17', 'Jan 19', 'Jan 20', 'Jan 21', 'Jan 23', 'Jan 24', 'Jan 25', 'Jan 26', 'Jan 24', 'Jan 28', 'Jan 29'],\r\n                axisBorder: {\r\n                    show: false\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                tickAmount: 10,\r\n                labels: {\r\n                    //rotate: -45,\r\n                    //rotateAlways: true,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false\r\n                }\r\n            },\r\n            yaxis: {\r\n                min: -50,\r\n                max: 80,\r\n                tickAmount: 6,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    },\r\n                    formatter: function (val) {\r\n                        return parseInt(val) + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px',\r\n                    borderRadius: 4\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, negativeColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,               \r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        \r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);    \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget1;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget1.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget10 = function () {\r\n    // Private methods\r\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\r\n        var element = document.querySelector(chartSelector);\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n        \r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\r\n\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: data\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }              \r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['22%'],\r\n                    borderRadius: 5,                     \r\n                    dataLabels: {\r\n                        position: \"top\" // top, center, bottom\r\n                    },\r\n                    startingShape: 'flat'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: true, \r\n                offsetY: -30,                                             \r\n                style: {\r\n                    fontSize: '13px',\r\n                    colors: ['labelColor']\r\n                },\r\n                formatter: function(val) {\r\n                    return val + \"%\";\r\n                }          \r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Metals', 'Energy', 'Agro', 'Machines', 'Transport', 'Textile', 'Wood'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\r\n                        fontSize: '13px'\r\n                    }                    \r\n                },\r\n                crosshairs: {\r\n                    fill: {         \r\n                        gradient: {         \r\n                            opacityFrom: 0,\r\n                            opacityTo: 0\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\r\n                        fontSize: '13px'\r\n                    },\r\n                    formatter: function (val) {\r\n                        return parseInt(val) + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n\r\n        var init = false;\r\n        var tab = document.querySelector(tabSelector);\r\n        \r\n        if (initByDefault === true) {\r\n            chart.render();\r\n            init = true;\r\n        }        \r\n\r\n        tab.addEventListener('shown.bs.tab', function (event) {\r\n            if (init == false) {\r\n                chart.render();\r\n                init = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {   \r\n            initChart('#kt_charts_widget_10_tab_1', '#kt_charts_widget_10_chart_1', [30, 18, 43, 70, 13, 37, 23], true);\r\n            initChart('#kt_charts_widget_10_tab_2', '#kt_charts_widget_10_chart_2', [25, 55, 35, 50, 45, 20, 31], false); \r\n            initChart('#kt_charts_widget_10_tab_3', '#kt_charts_widget_10_chart_3', [45, 15, 35, 70, 45, 50, 21], false);\r\n            initChart('#kt_charts_widget_10_tab_4', '#kt_charts_widget_10_chart_4', [15, 55, 25, 50, 25, 60, 31], false);            \r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget10;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget10.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget11 = function () {\r\n    // Private methods\r\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\r\n        var element = document.querySelector(chartSelector);\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n        if (!element) {\r\n            return;\r\n        }        \r\n        \r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');\r\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Sales',\r\n                data: data\r\n            }],            \r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: \"gradient\",\r\n                gradient: {\r\n                shadeIntensity: 1,\r\n                opacityFrom: 0.3,\r\n                opacityTo: 0.7,\r\n                stops: [0, 90, 100]\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {\r\n                categories: ['', 'Apr 02', 'Apr 06', 'Apr 06', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 09', 'Apr 14', 'Apr 10', 'Apr 12', 'Apr 18', 'Apr 14', \r\n                    'Apr 15', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 02', 'Apr 06', 'Apr 18', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 22', 'Apr 14', 'Apr 11', 'Apr 12', ''\r\n                ],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                tickAmount: 5,\r\n                labels: {\r\n                    rotate: 0,\r\n                    rotateAlways: true,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '13px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '13px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                tickAmount: 4,\r\n                max: 24,\r\n                min: 10,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '13px'\r\n                    }                     \r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        var init = false;\r\n        var tab = document.querySelector(tabSelector);\r\n        \r\n        if (initByDefault === true) {\r\n            chart.render();\r\n            init = true;\r\n        }        \r\n\r\n        tab.addEventListener('shown.bs.tab', function (event) {\r\n            if (init == false) {\r\n                chart.render();\r\n                init = true;\r\n            }\r\n        })   \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {           \r\n            initChart('#kt_chart_widget_11_tab_1', '#kt_chart_widget_11_chart_1', [16, 19, 19, 16, 16, 14, 15, 15, 17, 17, 19, 19, 18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 20, 20, 22], false);\r\n            initChart('#kt_chart_widget_11_tab_2', '#kt_chart_widget_11_chart_2', [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22, 15, 18, 18, 17, 17, 15, 15, 17, 17, 19, 17], false); \r\n            initChart('#kt_chart_widget_11_tab_3', '#kt_chart_widget_11_chart_3', [17, 20, 20, 19, 19, 17, 17, 19, 19, 21, 21, 19, 19, 21, 21, 18, 18, 16, 17, 17, 19, 19, 21, 21, 19, 19, 17, 17, 18, 18], true); \r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget11;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget11.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget12 = function () {\r\n    // Private methods\r\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\r\n        var element = document.querySelector(chartSelector);\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n        \r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\r\n\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: data\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }              \r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['22%'],\r\n                    borderRadius: 5,                     \r\n                    dataLabels: {\r\n                        position: \"top\" // top, center, bottom\r\n                    },\r\n                    startingShape: 'flat'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: true, \r\n                offsetY: -28,                                             \r\n                style: {\r\n                    fontSize: '13px',\r\n                    colors: ['labelColor']\r\n                }                         \r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Grossey', 'Pet Food', 'Flowers', 'Restaurant', 'Kids Toys', 'Clothing', 'Still Water'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\r\n                        fontSize: '13px'\r\n                    }                    \r\n                },\r\n                crosshairs: {\r\n                    fill: {         \r\n                        gradient: {         \r\n                            opacityFrom: 0,\r\n                            opacityTo: 0\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\r\n                        fontSize: '13px'\r\n                    },\r\n                    formatter: function (val) {\r\n                        return parseInt(val) + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n\r\n        var init = false;\r\n        var tab = document.querySelector(tabSelector);\r\n        \r\n        if (initByDefault === true) {\r\n            chart.render();\r\n            init = true;\r\n        }        \r\n\r\n        tab.addEventListener('shown.bs.tab', function (event) {\r\n            if (init == false) {\r\n                chart.render();\r\n                init = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {   \r\n            initChart('#kt_charts_widget_12_tab_1', '#kt_charts_widget_12_chart_1', [54, 42, 75, 110, 23, 87, 50], true);\r\n            initChart('#kt_charts_widget_12_tab_2', '#kt_charts_widget_12_chart_2', [25, 55, 35, 50, 45, 20, 31], false); \r\n            initChart('#kt_charts_widget_12_tab_3', '#kt_charts_widget_12_chart_3', [45, 15, 35, 70, 45, 50, 21], false); \r\n        }        \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget12;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget12.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget13 = (function () {\r\n    // Private methods\r\n    var initChart = function () {\r\n        // Check if amchart library is included\r\n        if (typeof am5 === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        var element = document.getElementById(\"kt_charts_widget_13_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        am5.ready(function () {\r\n            // Create root element\r\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n            var root = am5.Root.new(element);\r\n\r\n            // Set themes\r\n            // https://www.amcharts.com/docs/v5/concepts/themes/\r\n            root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n            // Create chart\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n            var chart = root.container.children.push(\r\n                am5xy.XYChart.new(root, {\r\n                    panX: true,\r\n                    panY: true,\r\n                    wheelX: \"panX\",\r\n                    wheelY: \"zoomX\",\r\n                })\r\n            );\r\n\r\n            // Add cursor\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n            var cursor = chart.set(\r\n                \"cursor\",\r\n                am5xy.XYCursor.new(root, {\r\n                    behavior: \"none\"\r\n                })\r\n            );\r\n\r\n            cursor.lineY.set(\"visible\", false);\r\n\r\n            // The data\r\n            var data = [\r\n                {\r\n                    year: \"2003\",\r\n                    cars: 1587,\r\n                    motorcycles: 650,\r\n                    bicycles: 121,\r\n                },\r\n                {\r\n                    year: \"2004\",\r\n                    cars: 1567,\r\n                    motorcycles: 683,\r\n                    bicycles: 146,\r\n                },\r\n                {\r\n                    year: \"2005\",\r\n                    cars: 1617,\r\n                    motorcycles: 691,\r\n                    bicycles: 138,\r\n                },\r\n                {\r\n                    year: \"2006\",\r\n                    cars: 1630,\r\n                    motorcycles: 642,\r\n                    bicycles: 127,\r\n                },\r\n                {\r\n                    year: \"2007\",\r\n                    cars: 1660,\r\n                    motorcycles: 699,\r\n                    bicycles: 105,\r\n                },\r\n                {\r\n                    year: \"2008\",\r\n                    cars: 1683,\r\n                    motorcycles: 721,\r\n                    bicycles: 109,\r\n                },\r\n                {\r\n                    year: \"2009\",\r\n                    cars: 1691,\r\n                    motorcycles: 737,\r\n                    bicycles: 112,\r\n                },\r\n                {\r\n                    year: \"2010\",\r\n                    cars: 1298,\r\n                    motorcycles: 680,\r\n                    bicycles: 101,\r\n                },\r\n                {\r\n                    year: \"2011\",\r\n                    cars: 1275,\r\n                    motorcycles: 664,\r\n                    bicycles: 97,\r\n                },\r\n                {\r\n                    year: \"2012\",\r\n                    cars: 1246,\r\n                    motorcycles: 648,\r\n                    bicycles: 93,\r\n                },\r\n                {\r\n                    year: \"2013\",\r\n                    cars: 1318,\r\n                    motorcycles: 697,\r\n                    bicycles: 111,\r\n                },\r\n                {\r\n                    year: \"2014\",\r\n                    cars: 1213,\r\n                    motorcycles: 633,\r\n                    bicycles: 87,\r\n                },\r\n                {\r\n                    year: \"2015\",\r\n                    cars: 1199,\r\n                    motorcycles: 621,\r\n                    bicycles: 79,\r\n                },\r\n                {\r\n                    year: \"2016\",\r\n                    cars: 1110,\r\n                    motorcycles: 210,\r\n                    bicycles: 81,\r\n                },\r\n                {\r\n                    year: \"2017\",\r\n                    cars: 1165,\r\n                    motorcycles: 232,\r\n                    bicycles: 75,\r\n                },\r\n                {\r\n                    year: \"2018\",\r\n                    cars: 1145,\r\n                    motorcycles: 219,\r\n                    bicycles: 88,\r\n                },\r\n                {\r\n                    year: \"2019\",\r\n                    cars: 1163,\r\n                    motorcycles: 201,\r\n                    bicycles: 82,\r\n                },\r\n                {\r\n                    year: \"2020\",\r\n                    cars: 1180,\r\n                    motorcycles: 285,\r\n                    bicycles: 87,\r\n                },\r\n                {\r\n                    year: \"2021\",\r\n                    cars: 1159,\r\n                    motorcycles: 277,\r\n                    bicycles: 71,\r\n                },\r\n            ];\r\n\r\n            // Create axes\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n            var xAxis = chart.xAxes.push(\r\n                am5xy.CategoryAxis.new(root, {\r\n                    categoryField: \"year\",\r\n                    startLocation: 0.5,\r\n                    endLocation: 0.5,\r\n                    renderer: am5xy.AxisRendererX.new(root, {}),\r\n                    tooltip: am5.Tooltip.new(root, {}),\r\n                })\r\n            );\r\n\r\n            xAxis.get(\"renderer\").grid.template.setAll({\r\n                disabled: true,\r\n                strokeOpacity: 0\r\n            });\r\n\r\n            xAxis.get(\"renderer\").labels.template.setAll({\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            xAxis.data.setAll(data);\r\n\r\n            var yAxis = chart.yAxes.push(\r\n                am5xy.ValueAxis.new(root, {\r\n                    renderer: am5xy.AxisRendererY.new(root, {}),\r\n                })\r\n            );\r\n\r\n            yAxis.get(\"renderer\").grid.template.setAll({\r\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                strokeDasharray: [3]\r\n            });\r\n\r\n            yAxis.get(\"renderer\").labels.template.setAll({\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            // Add series\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n\r\n            function createSeries(name, field, color) {\r\n                var series = chart.series.push(\r\n                    am5xy.LineSeries.new(root, {\r\n                        name: name,\r\n                        xAxis: xAxis,\r\n                        yAxis: yAxis,\r\n                        stacked: true,\r\n                        valueYField: field,\r\n                        categoryXField: \"year\",\r\n                        fill: am5.color(color),\r\n                        tooltip: am5.Tooltip.new(root, {\r\n                            pointerOrientation: \"horizontal\",\r\n                            labelText: \"[bold]{name}[/]\\n{categoryX}: {valueY}\",\r\n                        }),\r\n                    })\r\n                );\r\n\r\n                \r\n\r\n                series.fills.template.setAll({\r\n                    fillOpacity: 0.5,\r\n                    visible: true,\r\n                });\r\n\r\n                series.data.setAll(data);\r\n                series.appear(1000);\r\n            }\r\n\r\n            createSeries(\"Cars\", \"cars\", KTUtil.getCssVariableValue('--bs-primary'));\r\n            createSeries(\"Motorcycles\", \"motorcycles\", KTUtil.getCssVariableValue('--bs-success'));\r\n            createSeries(\"Bicycles\", \"bicycles\", KTUtil.getCssVariableValue('--bs-warning'));\r\n\r\n            // Add scrollbar\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n            var scrollbarX = chart.set(\r\n                \"scrollbarX\",\r\n                am5.Scrollbar.new(root, {\r\n                    orientation: \"horizontal\",\r\n                    marginBottom: 25,\r\n                    height: 8\r\n                })\r\n            );\r\n\r\n            // Create axis ranges\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/\r\n            var rangeDataItem = xAxis.makeDataItem({\r\n                category: \"2016\",\r\n                endCategory: \"2021\",\r\n            });\r\n\r\n            var range = xAxis.createAxisRange(rangeDataItem);\r\n\r\n            rangeDataItem.get(\"grid\").setAll({\r\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\r\n                strokeOpacity: 0.5,\r\n                strokeDasharray: [3],\r\n            });\r\n\r\n            rangeDataItem.get(\"axisFill\").setAll({\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\r\n                fillOpacity: 0.1,\r\n            });\r\n\r\n            rangeDataItem.get(\"label\").setAll({\r\n                inside: true,\r\n                text: \"Fines increased\",\r\n                rotation: 90,\r\n                centerX: am5.p100,\r\n                centerY: am5.p100,\r\n                location: 0,\r\n                paddingBottom: 10,\r\n                paddingRight: 15,\r\n            });\r\n\r\n            var rangeDataItem2 = xAxis.makeDataItem({\r\n                category: \"2021\",\r\n            });\r\n\r\n            var range2 = xAxis.createAxisRange(rangeDataItem2);\r\n\r\n            rangeDataItem2.get(\"grid\").setAll({\r\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\r\n                strokeOpacity: 1,\r\n                strokeDasharray: [3],\r\n            });\r\n\r\n            rangeDataItem2.get(\"label\").setAll({\r\n                inside: true,\r\n                text: \"Fee introduced\",\r\n                rotation: 90,\r\n                centerX: am5.p100,\r\n                centerY: am5.p100,\r\n                location: 0,\r\n                paddingBottom: 10,\r\n                paddingRight: 15,\r\n            });\r\n\r\n            // Make stuff animate on load\r\n            // https://www.amcharts.com/docs/v5/concepts/animations/\r\n            chart.appear(1000, 100);\r\n        }); // end am5.ready()\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        },\r\n    };\r\n})();\r\n\r\n// Webpack support\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = KTChartsWidget13;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTChartsWidget13.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget14 = (function () {\r\n    // Private methods\r\n    var initChart = function () {\r\n        // Check if amchart library is included\r\n        if (typeof am5 === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        var element = document.getElementById(\"kt_charts_widget_14_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        am5.ready(function () {\r\n            // Create root element\r\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n            var root = am5.Root.new(element);\r\n\r\n            // Set themes\r\n            // https://www.amcharts.com/docs/v5/concepts/themes/\r\n            root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n            // Create chart\r\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/\r\n            var chart = root.container.children.push(\r\n                am5radar.RadarChart.new(root, {\r\n                    panX: false,\r\n                    panY: false,\r\n                    wheelX: \"panX\",\r\n                    wheelY: \"zoomX\",\r\n                    innerRadius: am5.percent(20),\r\n                    startAngle: -90,\r\n                    endAngle: 180,\r\n                })\r\n            );\r\n\r\n            // Data\r\n            var data = [\r\n                {\r\n                    category: \"Research\",\r\n                    value: 80,\r\n                    full: 100,\r\n                    columnSettings: {\r\n                        fillOpacity: 1,\r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-info')),\r\n                    },\r\n                },\r\n                {\r\n                    category: \"Marketing\",\r\n                    value: 35,\r\n                    full: 100,\r\n                    columnSettings: {\r\n                        fillOpacity: 1,\r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\r\n                    },\r\n                },\r\n                {\r\n                    category: \"Distribution\",\r\n                    value: 92,\r\n                    full: 100,\r\n                    columnSettings: {\r\n                        fillOpacity: 1,\r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\r\n                    },\r\n                },\r\n                {\r\n                    category: \"Human Resources\",\r\n                    value: 68,\r\n                    full: 100,\r\n                    columnSettings: {\r\n                        fillOpacity: 1,\r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\r\n                    },\r\n                },\r\n            ];\r\n\r\n            // Add cursor\r\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\r\n            var cursor = chart.set(\r\n                \"cursor\",\r\n                am5radar.RadarCursor.new(root, {\r\n                    behavior: \"zoomX\",\r\n                })\r\n            );\r\n\r\n            cursor.lineY.set(\"visible\", false);\r\n\r\n            // Create axes and their renderers\r\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\r\n            var xRenderer = am5radar.AxisRendererCircular.new(root, {\r\n                //minGridDistance: 50\r\n            });\r\n\r\n            xRenderer.labels.template.setAll({\r\n                radius: 10\r\n            });\r\n\r\n            xRenderer.grid.template.setAll({\r\n                forceHidden: true,\r\n            });\r\n\r\n            var xAxis = chart.xAxes.push(\r\n                am5xy.ValueAxis.new(root, {\r\n                    renderer: xRenderer,\r\n                    min: 0,\r\n                    max: 100,\r\n                    strictMinMax: true,\r\n                    numberFormat: \"#'%'\",\r\n                    tooltip: am5.Tooltip.new(root, {}),\r\n                })\r\n            );\r\n\r\n            var yRenderer = am5radar.AxisRendererRadial.new(root, {\r\n                minGridDistance: 20,\r\n            });\r\n\r\n            yRenderer.labels.template.setAll({\r\n                centerX: am5.p100,\r\n                fontWeight: \"500\",\r\n                fontSize: 18,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\r\n                templateField: \"columnSettings\",\r\n            });\r\n\r\n            yRenderer.grid.template.setAll({\r\n                forceHidden: true,\r\n            });\r\n\r\n            var yAxis = chart.yAxes.push(\r\n                am5xy.CategoryAxis.new(root, {\r\n                    categoryField: \"category\",\r\n                    renderer: yRenderer,\r\n                })\r\n            );\r\n\r\n            yAxis.data.setAll(data);\r\n\r\n            // Create series\r\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\r\n            var series1 = chart.series.push(\r\n                am5radar.RadarColumnSeries.new(root, {\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    clustered: false,\r\n                    valueXField: \"full\",\r\n                    categoryYField: \"category\",\r\n                    fill: root.interfaceColors.get(\"alternativeBackground\"),\r\n                })\r\n            );\r\n\r\n            series1.columns.template.setAll({\r\n                width: am5.p100,\r\n                fillOpacity: 0.08,\r\n                strokeOpacity: 0,\r\n                cornerRadius: 20,\r\n            });\r\n\r\n            series1.data.setAll(data);\r\n\r\n            var series2 = chart.series.push(\r\n                am5radar.RadarColumnSeries.new(root, {\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    clustered: false,\r\n                    valueXField: \"value\",\r\n                    categoryYField: \"category\",\r\n                })\r\n            );\r\n\r\n            series2.columns.template.setAll({\r\n                width: am5.p100,\r\n                strokeOpacity: 0,\r\n                tooltipText: \"{category}: {valueX}%\",\r\n                cornerRadius: 20,\r\n                templateField: \"columnSettings\",\r\n            });\r\n\r\n            series2.data.setAll(data);\r\n\r\n            // Animate chart and series in\r\n            // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\r\n            series1.appear(1000);\r\n            series2.appear(1000);\r\n            chart.appear(1000, 100);\r\n        });\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        },\r\n    };\r\n})();\r\n\r\n// Webpack support\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = KTChartsWidget14;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTChartsWidget14.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget15 = (function () {\r\n    // Private methods\r\n    var initChart = function () {\r\n        // Check if amchart library is included\r\n        if (typeof am5 === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        var element = document.getElementById(\"kt_charts_widget_15_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        am5.ready(function () {\r\n            // Create root element\r\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n            var root = am5.Root.new(element);\r\n\r\n            // Set themes\r\n            // https://www.amcharts.com/docs/v5/concepts/themes/\r\n            root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n            // Create chart\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n            var chart = root.container.children.push(\r\n                am5xy.XYChart.new(root, {\r\n                    panX: false,\r\n                    panY: false,\r\n                    //wheelX: \"panX\",\r\n                    //wheelY: \"zoomX\",\r\n                    layout: root.verticalLayout,\r\n                })\r\n            );\r\n\r\n            // Data\r\n            var colors = chart.get(\"colors\");\r\n\r\n            var data = [\r\n                {\r\n                    country: \"US\",\r\n                    visits: 725,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-states.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"UK\",\r\n                    visits: 625,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-kingdom.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"China\",\r\n                    visits: 602,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/china.svg\",\r\n                   columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Japan\",\r\n                    visits: 509,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/japan.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Germany\",\r\n                    visits: 322,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/germany.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"France\",\r\n                    visits: 214,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/france.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"India\",\r\n                    visits: 204,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/india.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Spain\",\r\n                    visits: 200,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/spain.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Italy\",\r\n                    visits: 165,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/italy.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Russia\",\r\n                    visits: 152,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/russia.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Norway\",\r\n                    visits: 125,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/norway.svg\",\r\n                    columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n                {\r\n                    country: \"Canada\",\r\n                    visits: 99,\r\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/canada.svg\",\r\n                   columnSettings: { \r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \r\n                    }\r\n                },\r\n            ];\r\n\r\n            // Create axes\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n            var xAxis = chart.xAxes.push(\r\n                am5xy.CategoryAxis.new(root, {\r\n                    categoryField: \"country\",\r\n                    renderer: am5xy.AxisRendererX.new(root, {\r\n                        minGridDistance: 30,\r\n                    }),\r\n                    bullet: function (root, axis, dataItem) {\r\n                        return am5xy.AxisBullet.new(root, {\r\n                            location: 0.5,\r\n                            sprite: am5.Picture.new(root, {\r\n                                width: 24,\r\n                                height: 24,\r\n                                centerY: am5.p50,\r\n                                centerX: am5.p50,\r\n                                src: dataItem.dataContext.icon,\r\n                            }),\r\n                        });\r\n                    },\r\n                })\r\n            );\r\n\r\n            xAxis.get(\"renderer\").labels.template.setAll({\r\n                paddingTop: 20,                \r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n            \r\n            xAxis.get(\"renderer\").grid.template.setAll({\r\n                disabled: true,\r\n                strokeOpacity: 0\r\n            });\r\n\r\n            xAxis.data.setAll(data);\r\n\r\n            var yAxis = chart.yAxes.push(\r\n                am5xy.ValueAxis.new(root, {\r\n                    renderer: am5xy.AxisRendererY.new(root, {}),\r\n                })\r\n            );\r\n\r\n            yAxis.get(\"renderer\").grid.template.setAll({\r\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                strokeDasharray: [3]\r\n            });\r\n\r\n            yAxis.get(\"renderer\").labels.template.setAll({\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            // Add series\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n            var series = chart.series.push(\r\n                am5xy.ColumnSeries.new(root, {\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: \"visits\",\r\n                    categoryXField: \"country\"\r\n                })\r\n            );\r\n\r\n            series.columns.template.setAll({\r\n                tooltipText: \"{categoryX}: {valueY}\",\r\n                tooltipY: 0,\r\n                strokeOpacity: 0,\r\n                templateField: \"columnSettings\",\r\n            });\r\n\r\n            series.columns.template.setAll({\r\n                strokeOpacity: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 6,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 6,\r\n            });\r\n\r\n            series.data.setAll(data);\r\n\r\n            // Make stuff animate on load\r\n            // https://www.amcharts.com/docs/v5/concepts/animations/\r\n            series.appear();\r\n            chart.appear(1000, 100);\r\n        });\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        },\r\n    };\r\n})();\r\n\r\n// Webpack support\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = KTChartsWidget15;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTChartsWidget15.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget16 = (function () {\r\n    // Private methods\r\n    var initChart = function () {\r\n        // Check if amchart library is included\r\n        if (typeof am5 === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        var element = document.getElementById(\"kt_charts_widget_16_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        am5.ready(function () {\r\n            // Create root element\r\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n            var root = am5.Root.new(element);\r\n\r\n            // Set themes\r\n            // https://www.amcharts.com/docs/v5/concepts/themes/\r\n            root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n            // Create chart\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n            var chart = root.container.children.push(\r\n                am5xy.XYChart.new(root, {\r\n                    panX: false,\r\n                    panY: false,\r\n                    wheelX: \"panX\",\r\n                    wheelY: \"zoomX\",\r\n                    layout: root.verticalLayout,\r\n                })\r\n            );\r\n\r\n            var colors = chart.get(\"colors\");\r\n\r\n            var data = [\r\n                {\r\n                    country: \"US\",\r\n                    visits: 725,\r\n                },\r\n                {\r\n                    country: \"UK\",\r\n                    visits: 625,\r\n                },\r\n                {\r\n                    country: \"China\",\r\n                    visits: 602,\r\n                },\r\n                {\r\n                    country: \"Japan\",\r\n                    visits: 509,\r\n                },\r\n                {\r\n                    country: \"Germany\",\r\n                    visits: 322,\r\n                },\r\n                {\r\n                    country: \"France\",\r\n                    visits: 214,\r\n                },\r\n                {\r\n                    country: \"India\",\r\n                    visits: 204,\r\n                },\r\n                {\r\n                    country: \"Spain\",\r\n                    visits: 198,\r\n                },\r\n                {\r\n                    country: \"Italy\",\r\n                    visits: 165,\r\n                },\r\n                {\r\n                    country: \"Russia\",\r\n                    visits: 130,\r\n                },\r\n                {\r\n                    country: \"Norway\",\r\n                    visits: 93,\r\n                },\r\n                {\r\n                    country: \"Canada\",\r\n                    visits: 41,\r\n                },\r\n            ];\r\n\r\n            prepareParetoData();\r\n\r\n            function prepareParetoData() {\r\n                var total = 0;\r\n\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var value = data[i].visits;\r\n                    total += value;\r\n                }\r\n\r\n                var sum = 0;\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var value = data[i].visits;\r\n                    sum += value;\r\n                    data[i].pareto = (sum / total) * 100;\r\n                }\r\n            }\r\n\r\n            // Create axes\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n            var xAxis = chart.xAxes.push(\r\n                am5xy.CategoryAxis.new(root, {\r\n                    categoryField: \"country\",\r\n                    renderer: am5xy.AxisRendererX.new(root, {\r\n                        minGridDistance: 30,\r\n                    }),\r\n                })\r\n            );\r\n\r\n            xAxis.get(\"renderer\").labels.template.setAll({\r\n                paddingTop: 10,\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            xAxis.get(\"renderer\").grid.template.setAll({\r\n                disabled: true,\r\n                strokeOpacity: 0\r\n            });\r\n\r\n            xAxis.data.setAll(data);\r\n\r\n            var yAxis = chart.yAxes.push(\r\n                am5xy.ValueAxis.new(root, {\r\n                    renderer: am5xy.AxisRendererY.new(root, {}),\r\n                })\r\n            );\r\n\r\n            yAxis.get(\"renderer\").labels.template.setAll({\r\n                paddingLeft: 10,\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            yAxis.get(\"renderer\").grid.template.setAll({\r\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                strokeDasharray: [3]\r\n            });\r\n\r\n            var paretoAxisRenderer = am5xy.AxisRendererY.new(root, {\r\n                opposite: true,\r\n            });\r\n            var paretoAxis = chart.yAxes.push(\r\n                am5xy.ValueAxis.new(root, {\r\n                    renderer: paretoAxisRenderer,\r\n                    min: 0,\r\n                    max: 100,\r\n                    strictMinMax: true,\r\n                })\r\n            );\r\n            paretoAxis.get(\"renderer\").labels.template.setAll({\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            paretoAxisRenderer.grid.template.set(\"forceHidden\", true);\r\n            paretoAxis.set(\"numberFormat\", \"#'%\");\r\n\r\n            // Add series\r\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n            var series = chart.series.push(\r\n                am5xy.ColumnSeries.new(root, {\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: \"visits\",\r\n                    categoryXField: \"country\",\r\n                })\r\n            );\r\n\r\n            series.columns.template.setAll({\r\n                tooltipText: \"{categoryX}: {valueY}\",\r\n                tooltipY: 0,\r\n                strokeOpacity: 0,\r\n                cornerRadiusTL: 6,\r\n                cornerRadiusTR: 6,\r\n            });\r\n\r\n            series.columns.template.adapters.add(\r\n                \"fill\",\r\n                function (fill, target) {\r\n                    return chart\r\n                        .get(\"colors\")\r\n                        .getIndex(series.dataItems.indexOf(target.dataItem));\r\n                }\r\n            );\r\n\r\n            // pareto series\r\n            var paretoSeries = chart.series.push(\r\n                am5xy.LineSeries.new(root, {\r\n                    xAxis: xAxis,\r\n                    yAxis: paretoAxis,\r\n                    valueYField: \"pareto\",\r\n                    categoryXField: \"country\",\r\n                    stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark')),\r\n                    maskBullets: false,\r\n                })\r\n            );\r\n\r\n            paretoSeries.bullets.push(function () {\r\n                return am5.Bullet.new(root, {\r\n                    locationY: 1,\r\n                    sprite: am5.Circle.new(root, {\r\n                        radius: 5,\r\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\r\n                        stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark'))\r\n                    }),\r\n                });\r\n            });\r\n\r\n            series.data.setAll(data);\r\n            paretoSeries.data.setAll(data);\r\n\r\n            // Make stuff animate on load\r\n            // https://www.amcharts.com/docs/v5/concepts/animations/\r\n            series.appear();\r\n            chart.appear(1000, 100);\r\n        });\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        },\r\n    };\r\n})();\r\n\r\n// Webpack support\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = KTChartsWidget16;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTChartsWidget16.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget17 = (function () {\r\n    // Private methods\r\n    var initChart = function () {\r\n        // Check if amchart library is included\r\n        if (typeof am5 === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        var element = document.getElementById(\"kt_charts_widget_17_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        am5.ready(function () {\r\n            // Create root element\r\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n            var root = am5.Root.new(element);\r\n\r\n            // Set themes\r\n            // https://www.amcharts.com/docs/v5/concepts/themes/\r\n            root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n            // Create chart\r\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n            // start and end angle must be set both for chart and series\r\n            var chart = root.container.children.push(\r\n                am5percent.PieChart.new(root, {\r\n                    startAngle: 180,\r\n                    endAngle: 360,\r\n                    layout: root.verticalLayout,\r\n                    innerRadius: am5.percent(50),\r\n                })\r\n            );\r\n\r\n            // Create series\r\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n            // start and end angle must be set both for chart and series\r\n            var series = chart.series.push(\r\n                am5percent.PieSeries.new(root, {\r\n                    startAngle: 180,\r\n                    endAngle: 360,\r\n                    valueField: \"value\",\r\n                    categoryField: \"category\",\r\n                    alignLabels: false,\r\n                })\r\n            );\r\n\r\n            series.labels.template.setAll({\r\n                fontWeight: \"400\",\r\n                fontSize: 13,\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\r\n            });\r\n\r\n            series.states.create(\"hidden\", {\r\n                startAngle: 180,\r\n                endAngle: 180,\r\n            });\r\n\r\n            series.slices.template.setAll({\r\n                cornerRadius: 5,\r\n            });\r\n\r\n            series.ticks.template.setAll({\r\n                forceHidden: true,\r\n            });\r\n\r\n            // Set data\r\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\r\n            series.data.setAll([\r\n                { value: 10, category: \"One\", fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')) },\r\n                { value: 9, category: \"Two\", fill: am5.color(KTUtil.getCssVariableValue('--bs-success')) },\r\n                { value: 6, category: \"Three\", fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')) },\r\n                { value: 5, category: \"Four\", fill: am5.color(KTUtil.getCssVariableValue('--bs-warning')) },\r\n                { value: 4, category: \"Five\", fill: am5.color(KTUtil.getCssVariableValue('--bs-info')) },\r\n                { value: 3, category: \"Six\", fill: am5.color(KTUtil.getCssVariableValue('--bs-secondary')) }\r\n            ]);\r\n\r\n            series.appear(1000, 100);\r\n        });\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        },\r\n    };\r\n})();\r\n\r\n// Webpack support\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = KTChartsWidget17;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTChartsWidget17.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget2 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.querySelectorAll('.charts-widget-2');\r\n\r\n        [].slice.call(element).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [15, 15, 45, 45, 25, 25, 55, 55, 20, 20, 37]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            }; \r\n            \r\n            var chart = new ApexCharts(element, options);\r\n\r\n            // Set timeout to properly get the parent elements width\r\n            setTimeout(function() {\r\n                chart.render();   \r\n            }, 300);  \r\n        });           \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget2;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget2.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget3 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_3\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n        \r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');\r\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Sales',\r\n                data: [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]\r\n            }],            \r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: \"gradient\",\r\n                gradient: {\r\n                shadeIntensity: 1,\r\n                opacityFrom: 0.3,\r\n                opacityTo: 0.7,\r\n                stops: [0, 90, 100]\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {\r\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                tickAmount: 6,\r\n                labels: {\r\n                    rotate: 0,\r\n                    rotateAlways: true,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                tickAmount: 4,\r\n                max: 24,\r\n                min: 10,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    },\r\n                    formatter: function (val) {\r\n                        return '$' + Number(val / 10).toFixed(1) + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \"K\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n\r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);     \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget3;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget3.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget4 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_4\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n        \r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n        var lightColor = KTUtil.getCssVariableValue('--bs-primary');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Discounted',\r\n                data: [34.5,34.5,35,35,35.5,35.5,35,35,34.5,34.5,34.5,34.5,35,35,34.5,35.5,35.5,35.5,35]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: \"gradient\",\r\n                gradient: {\r\n                shadeIntensity: 1,\r\n                opacityFrom: 0.3,\r\n                opacityTo: 0.7,\r\n                stops: [0, 90, 100]\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {\r\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                tickAmount: 6,\r\n                labels: {\r\n                    rotate: 0,\r\n                    rotateAlways: true,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                max: 36.3,\r\n                min: 33,\r\n                tickAmount: 6,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    },\r\n                    formatter: function (val) {\r\n                        return '$' + parseInt(10 * val)\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return '$' + parseInt(10 * val)\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n\r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();\r\n        }, 300);           \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget4;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget4.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget5 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_5\"); \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n        \r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        \r\n        var options = {\r\n            series: [{\r\n                data: [15, 12, 10, 8, 7, 4, 3],\r\n                show: false                                                                              \r\n            }],\r\n            chart: {\r\n                type: 'bar',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }                             \r\n            },                    \r\n            plotOptions: {\r\n                bar: {\r\n                    borderRadius: 4,\r\n                    horizontal: true,\r\n                    distributed: true,\r\n                    barHeight: 23                   \r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false                               \r\n            },             \r\n            legend: {\r\n                show: false\r\n            },                               \r\n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA', '#50CDCD', '#3F4254'],                                                                      \r\n            xaxis: {\r\n                categories: ['Phones', 'Laptops', 'Headsets', 'Games', 'Keyboardsy', 'Monitors', 'Speakers'],\r\n                labels: {\r\n                    formatter: function (val) {\r\n                      return val + \"K\"\r\n                    },\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-400'),\r\n                        fontSize: '14px',\r\n                        fontWeight: '600',\r\n                        align: 'left'                                              \r\n                    }                  \r\n                },\r\n                axisBorder: {\r\n\t\t\t\t\tshow: false\r\n\t\t\t\t}                         \r\n            },\r\n            yaxis: {\r\n                labels: {                   \r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-800'),\r\n                        fontSize: '14px',\r\n                        fontWeight: '600'                                                                 \r\n                    },\r\n                    offsetY: 2,\r\n                    align: 'left' \r\n                }              \r\n            },\r\n            grid: {                \r\n                borderColor: borderColor,                \r\n                xaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },   \r\n                yaxis: {\r\n                    lines: {\r\n                        show: false  \r\n                    }\r\n                },\r\n                strokeDashArray: 4              \r\n            }                                 \r\n        };  \r\n          \r\n        var chart = new ApexCharts(element, options);\r\n        \r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300); \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget5;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget5.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget6 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_6\"); \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n        \r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');    \r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n        var maxValue = 18;\r\n        \r\n        var options = {\r\n            series: [{\r\n                name: 'Sales',\r\n                data: [15, 12, 10, 8, 7]                                                                                                             \r\n            }],           \r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }                             \r\n            },                    \r\n            plotOptions: {\r\n                bar: {\r\n                    borderRadius: 8,\r\n                    horizontal: true,\r\n                    distributed: true,\r\n                    barHeight: 50,\r\n                    dataLabels: {\r\n\t\t\t\t        position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\r\n\t\t\t        }                                                       \r\n                }\r\n            },\r\n            dataLabels: {  // Docs: https://apexcharts.com/docs/options/datalabels/\r\n                enabled: true,              \r\n                textAnchor: 'start',  \r\n                offsetX: 0,                 \r\n                formatter: function (val, opts) {\r\n                    var val = val * 1000;\r\n                    var Format = wNumb({\r\n                        //prefix: '$',\r\n                        //suffix: ',-',\r\n                        thousand: ','\r\n                    });\r\n\r\n                    return Format.to(val);\r\n                },\r\n                style: {\r\n                    fontSize: '14px',\r\n                    fontWeight: '600',\r\n                    align: 'left',                                                            \r\n                }                                       \r\n            },             \r\n            legend: {\r\n                show: false\r\n            },                               \r\n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],                                                                      \r\n            xaxis: {\r\n                categories: [\"ECR - 90%\", \"FGI - 82%\", 'EOQ - 75%', 'FMG - 60%', 'PLG - 50%'],\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return val + \"K\"\r\n                    },\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '14px',\r\n                        fontWeight: '600',\r\n                        align: 'left'                                              \r\n                    }                  \r\n                },\r\n                axisBorder: {\r\n\t\t\t\t\tshow: false\r\n\t\t\t\t}                         \r\n            },\r\n            yaxis: {\r\n                labels: {       \r\n                    formatter: function (val, opt) {\r\n                        if (Number.isInteger(val)) {\r\n                            var percentage = parseInt(val * 100 / maxValue) . toString(); \r\n                            return val + ' - ' + percentage + '%';\r\n                        } else {\r\n                            return val;\r\n                        }\r\n                    },            \r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '14px',\r\n                        fontWeight: '600'                                                                 \r\n                    },\r\n                    offsetY: 2,\r\n                    align: 'left' \r\n                }           \r\n            },\r\n            grid: {                \r\n                borderColor: borderColor,                \r\n                xaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },   \r\n                yaxis: {\r\n                    lines: {\r\n                        show: false  \r\n                    }\r\n                },\r\n                strokeDashArray: 4              \r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return val + 'K';\r\n                    }\r\n                }\r\n            }                                 \r\n        };  \r\n          \r\n        var chart = new ApexCharts(element, options);\r\n\r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);        \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget6;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget6.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget7 = function () {\r\n    // Private methods\r\n    var initChart = function(chartSelector) {\r\n        var element = document.querySelector(chartSelector);\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: data1\r\n            }, {\r\n                name: 'Revenue',\r\n                data: data2\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['40%'],\r\n                    borderRadius: [6]\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-700'),\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-700'),\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n\r\n        var init = false;\r\n        var tab = document.querySelector(tabSelector);\r\n        \r\n        if (initByDefault === true) {\r\n            chart.render();\r\n            init = true;\r\n        }        \r\n\r\n        tab.addEventListener('shown.bs.tab', function (event) {\r\n            if (init == false) {\r\n                chart.render();\r\n                init = true;\r\n            }\r\n        })\r\n          \r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {          \r\n            initChart('#kt_chart_widget_7_tab_1', '#kt_chart_widget_7_chart_1', [44, 55, 57, 56, 61, 58], [76, 85, 101, 98, 87, 105], true);\r\n            initChart('#kt_chart_widget_7_tab_2', '#kt_chart_widget_7_chart_2', [35, 60, 35, 50, 45, 30], [65, 80, 50, 80, 75, 105], false);\r\n            initChart('#kt_chart_widget_7_tab_3', '#kt_chart_widget_7_chart_3', [25, 40, 45, 50, 40, 60], [76, 85, 101, 98, 87, 105], false);\r\n            initChart('#kt_chart_widget_7_tab_4', '#kt_chart_widget_7_chart_4', [50, 35, 45, 55, 30, 40], [76, 85, 101, 98, 87, 105], false);             \r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget7;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    //KTChartsWidget7.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget8 = function () {\r\n    // Private methods\r\n    var initChart = function(toggle, selector, data, initByDefault) {\r\n        var element = document.querySelector(selector);\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));    \r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \r\n\r\n        var options = {\r\n            series: [\r\n                {\r\n                    name: 'Social Campaigns',\r\n                    data: data[0]  // array value is of the format [x, y, z] where x (timestamp) and y are the two axes coordinates,\r\n                }, {\r\n                    name: 'Email Newsletter',\r\n                    data: data[1]\r\n                }, {\r\n                    name: 'TV Campaign',\r\n                    data: data[2]\r\n                }, {\r\n                    name: 'Google Ads',\r\n                    data: data[3]\r\n                }, {\r\n                    name: 'Courses',\r\n                    data: data[4]\r\n                }, {\r\n                    name: 'Radio',\r\n                    data: data[5]\r\n                }                \r\n            ],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bubble',    \r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }                         \r\n            },                                 \r\n            plotOptions: {\r\n                bubble: {\r\n                }\r\n            },\r\n            stroke: {\r\n                show: false,\r\n                width: 0\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            xaxis: {\r\n                type: 'numeric',             \r\n                tickAmount: 7,\r\n                min: 0,\r\n                max: 700,\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: true,\r\n                    height: 0,\r\n                },\r\n                labels: {\r\n                    show: true,\r\n                    trim: true,\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\r\n                        fontSize: '13px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                tickAmount: 7,\r\n                min: 0,\r\n                max: 700,\r\n                labels: {\r\n                    style: {\r\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\r\n                        fontSize: '13px'\r\n                    }\r\n                }               \r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                x: {\r\n                    formatter: function (val) {\r\n                        return \"Clicks: \" + val;\r\n                    }\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \"K\"\r\n                    }\r\n                },\r\n                z: {\r\n                    title: 'Impression: '\r\n                }\r\n            },\r\n            crosshairs: {\r\n                show: true,\r\n                position: 'front',\r\n                stroke: {\r\n                    color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\r\n                    width: 1,\r\n                    dashArray: 0,\r\n                }\r\n            },           \r\n            colors: [\r\n                KTUtil.getCssVariableValue('--bs-primary'),\r\n                KTUtil.getCssVariableValue('--bs-success'),   \r\n                KTUtil.getCssVariableValue('--bs-warning'),\r\n                KTUtil.getCssVariableValue('--bs-danger'),\r\n                KTUtil.getCssVariableValue('--bs-info'),\r\n                '#43CED7'\r\n            ],\r\n            fill: {\r\n                opacity: 1,                \r\n            },\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                padding: {\r\n                    right: 20\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var initialized = false;\r\n        var chart = new ApexCharts(element, options);        \r\n        var tab = document.querySelector(toggle);\r\n        \r\n        if (initByDefault === true) {\r\n            // Set timeout to properly get the parent elements width\r\n            setTimeout(function() {\r\n                chart.render();  \r\n                initialized = true;\r\n            }, 300);\r\n        }        \r\n\r\n        tab.addEventListener('shown.bs.tab', function (event) {\r\n            if (initialized === false) {\r\n                chart.render();\r\n                initialized = true;\r\n            }\r\n        })        \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {    \r\n            var data1 = [\r\n                [[100, 250, 30]], [[225, 300, 35]], [[300, 350, 25]], [[350, 350, 20]], [[450, 400, 25]], [[550, 350, 35]]\r\n            ];\r\n\r\n            var data2 = [\r\n                [[125, 300, 40]], [[250, 350, 35]], [[350, 450, 30]], [[450, 250, 25]], [[500, 500, 30]], [[600, 250, 28]]\r\n            ];\r\n\r\n            initChart('#kt_chart_widget_8_week_toggle', '#kt_chart_widget_8_week_chart', data1, false);\r\n            initChart('#kt_chart_widget_8_month_toggle', '#kt_chart_widget_8_month_chart', data2, true);    \r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget8;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget8.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartsWidget9 = function () {\r\n    // Private methods\r\n    var initChart = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_9\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-400');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \r\n\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-primary');\r\n\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [21, 21, 26, 26, 31, 31, 27]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [12, 16, 16, 21, 21, 18, 18]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: ['', '06 Sep', '13 Sep', '20 Sep', '27 Sep', '30 Sep', ''],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: labelColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            crosshairs: {\r\n                show: true,\r\n                position: 'front',\r\n                stroke: {\r\n                    color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\r\n                    width: 1,\r\n                    dashArray: 0,\r\n                },\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [baseColor, secondaryColor],\r\n                strokeColor: [KTUtil.getCssVariableValue('--bs-danger'), KTUtil.getCssVariableValue('--bs-warning')],\r\n                strokeWidth: 3\r\n            }\r\n        };        \r\n          \r\n        var chart = new ApexCharts(element, options);\r\n\r\n        // Set timeout to properly get the parent elements width\r\n        setTimeout(function() {\r\n            chart.render();   \r\n        }, 300);        \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTChartsWidget9;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartsWidget9.init();\r\n});\r\n\r\n\r\n ","\"use strict\";\r\n\r\n// Class definition\r\nvar KTMapsWidget1 = (function () {\r\n    // Private methods\r\n    var initMap = function () {\r\n        // Check if amchart library is included\r\n        if (typeof am5 === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        var element = document.getElementById(\"kt_maps_widget_1_map\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        // On amchart ready\r\n        am5.ready(function () {\r\n            // Create root element\r\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n            var root = am5.Root.new(element);\r\n\r\n            // Set themes\r\n            // https://www.amcharts.com/docs/v5/concepts/themes/\r\n            root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n            // Create the map chart\r\n            // https://www.amcharts.com/docs/v5/charts/map-chart/\r\n            var chart = root.container.children.push(\r\n                am5map.MapChart.new(root, {\r\n                    panX: \"translateX\",\r\n                    panY: \"translateY\",\r\n                    projection: am5map.geoMercator(),\r\n\t\t\t\t\tpaddingLeft: 0,\r\n\t\t\t\t\tpaddingrIGHT: 0,\r\n\t\t\t\t\tpaddingBottom: 0\r\n                })\r\n            );\r\n\r\n            // Create main polygon series for countries\r\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\r\n            var polygonSeries = chart.series.push(\r\n                am5map.MapPolygonSeries.new(root, {\r\n                    geoJSON: am5geodata_worldLow,\r\n                    exclude: [\"AQ\"],\r\n                })\r\n            );\r\n\r\n            polygonSeries.mapPolygons.template.setAll({\r\n                tooltipText: \"{name}\",\r\n                toggleKey: \"active\",\r\n                interactive: true,\r\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\r\n            });\r\n\r\n            polygonSeries.mapPolygons.template.states.create(\"hover\", {\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\r\n            });\r\n\r\n            polygonSeries.mapPolygons.template.states.create(\"active\", {\r\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\r\n            });\r\n\r\n            // Highlighted Series\r\n            // Create main polygon series for countries\r\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\r\n            var polygonSeriesHighlighted = chart.series.push(\r\n                am5map.MapPolygonSeries.new(root, {\r\n                    //geoJSON: am5geodata_usaLow,\r\n\t\t\t\t\tgeoJSON: am5geodata_worldLow,\r\n\t\t\t\t\tinclude: ['US', 'BR', 'RU']\r\n                })\r\n            );\r\n\r\n            polygonSeriesHighlighted.mapPolygons.template.setAll({\r\n                tooltipText: \"{name}\",\r\n                toggleKey: \"active\",\r\n                interactive: true,\r\n            });\r\n\r\n            var colors = am5.ColorSet.new(root, {});\r\n\r\n            polygonSeriesHighlighted.mapPolygons.template.set(\r\n                \"fill\",\r\n\t\t\t\tam5.color(KTUtil.getCssVariableValue('--bs-primary')),\r\n            );\r\n\r\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"hover\", {\r\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\r\n            });\r\n\r\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"active\", {\r\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\r\n            });\r\n\r\n            // Add zoom control\r\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control\r\n            //chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\r\n\r\n            // Set clicking on \"water\" to zoom out\r\n            chart.chartContainer\r\n                .get(\"background\")\r\n                .events.on(\"click\", function () {\r\n                    chart.goHome();\r\n                });\r\n\r\n            // Make stuff animate on load\r\n            chart.appear(1000, 100);\r\n        }); // end am5.ready()\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initMap();\r\n        },\r\n    };\r\n})();\r\n\r\n// Webpack support\r\nif (typeof module !== \"undefined\") {\r\n    module.exports = KTMapsWidget1;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTMapsWidget1.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTTablesWidget3 = function () {\r\n    var table;\r\n    var datatable;\r\n\r\n    // Private methods\r\n    const initDatatable = () => {\r\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\r\n        datatable = $(table).DataTable({\r\n            \"info\": false,\r\n            'order': [],\r\n            'paging': false,\r\n            'pageLength': false,\r\n        });\r\n    }\r\n\r\n    const handleTabStates = () => {\r\n        const tabs = document.querySelector('[data-kt-table-widget-3=\"tabs_nav\"]');\r\n        const tabButtons = tabs.querySelectorAll('[data-kt-table-widget-3=\"tab\"]');\r\n        const tabClasses = ['border-bottom', 'border-3', 'border-primary'];\r\n\r\n        tabButtons.forEach(tab => {\r\n            tab.addEventListener('click', e => {\r\n                // Get datatable filter value\r\n                const value = tab.getAttribute('data-kt-table-widget-3-value');\r\n                tabButtons.forEach(t => {\r\n                    t.classList.remove(...tabClasses);\r\n                    t.classList.add('text-muted');\r\n                });\r\n\r\n                tab.classList.remove('text-muted');\r\n                tab.classList.add(...tabClasses);\r\n\r\n                // Filter datatable\r\n                if (value === 'Show All') {\r\n                    datatable.search('').draw();\r\n                } else {\r\n                    datatable.search(value).draw();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Handle status filter dropdown\r\n    const handleStatusFilter = () => {\r\n        const select = document.querySelector('[data-kt-table-widget-3=\"filter_status\"]');\r\n\r\n        $(select).on('select2:select', function (e) {\r\n            const value = $(this).val();\r\n            if (value === 'Show All') {\r\n                datatable.search('').draw();\r\n            } else {\r\n                datatable.search(value).draw();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            table = document.querySelector('#kt_widget_table_3');\r\n\r\n            if (!table) {\r\n                return;\r\n            }\r\n\r\n            initDatatable();\r\n            handleTabStates();\r\n            handleStatusFilter();\r\n        }\r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTTablesWidget3;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTTablesWidget3.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTTablesWidget4 = function () {\r\n    var table;\r\n    var datatable;\r\n    var template;\r\n\r\n    // Private methods\r\n    const initDatatable = () => {\r\n        // Set date data order\r\n        const tableRows = table.querySelectorAll('tbody tr');\r\n\r\n        tableRows.forEach(row => {\r\n            const dateRow = row.querySelectorAll('td');\r\n            const realDate = moment(dateRow[1].innerHTML, \"DD MMM YYYY, LT\").format(); // select date from 2nd column in table\r\n\r\n            // Skip template\r\n            if (!row.closest('[data-kt-table-widget-4=\"subtable_template\"]')) {\r\n                dateRow[1].setAttribute('data-order', realDate);\r\n                dateRow[1].innerText = moment(realDate).fromNow();\r\n            }\r\n        });\r\n\r\n        // Get subtable template\r\n        const subtable = document.querySelector('[data-kt-table-widget-4=\"subtable_template\"]');\r\n        template = subtable.cloneNode(true);\r\n        template.classList.remove('d-none');\r\n\r\n        // Remove subtable template\r\n        subtable.parentNode.removeChild(subtable);\r\n\r\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\r\n        datatable = $(table).DataTable({\r\n            \"info\": false,\r\n            'order': [],\r\n            \"lengthChange\": false,\r\n            'pageLength': 6,\r\n            'ordering': false,\r\n            'paging': false,\r\n            'columnDefs': [\r\n                { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\r\n                { orderable: false, targets: 6 }, // Disable ordering on column 6 (actions)\r\n            ]\r\n        });\r\n\r\n        // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\r\n        datatable.on('draw', function () {\r\n            resetSubtable();\r\n            handleActionButton();\r\n        });\r\n    }\r\n\r\n    // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\r\n    var handleSearchDatatable = () => {\r\n        const filterSearch = document.querySelector('[data-kt-table-widget-4=\"search\"]');\r\n        filterSearch.addEventListener('keyup', function (e) {\r\n            datatable.search(e.target.value).draw();\r\n        });\r\n    }\r\n\r\n    // Handle status filter\r\n    const handleStatusFilter = () => {\r\n        const select = document.querySelector('[data-kt-table-widget-4=\"filter_status\"]');\r\n\r\n        $(select).on('select2:select', function (e) {\r\n            const value = $(this).val();\r\n            if (value === 'Show All') {\r\n                datatable.search('').draw();\r\n            } else {\r\n                datatable.search(value).draw();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Subtable data sample\r\n    const data = [\r\n        {\r\n            image: '76',\r\n            name: 'Go Pro 8',\r\n            description: 'Latest  version of Go Pro.',\r\n            cost: '500.00',\r\n            qty: '1',\r\n            total: '500.00',\r\n            stock: '12'\r\n        },\r\n        {\r\n            image: '60',\r\n            name: 'Bose Earbuds',\r\n            description: 'Top quality earbuds from Bose.',\r\n            cost: '300.00',\r\n            qty: '1',\r\n            total: '300.00',\r\n            stock: '8'\r\n        },\r\n        {\r\n            image: '211',\r\n            name: 'Dry-fit Sports T-shirt',\r\n            description: 'Comfortable sportswear.',\r\n            cost: '89.00',\r\n            qty: '1',\r\n            total: '89.00',\r\n            stock: '18'\r\n        },\r\n        {\r\n            image: '21',\r\n            name: 'Apple Airpod 3',\r\n            description: 'Apple\\'s latest earbuds.',\r\n            cost: '200.00',\r\n            qty: '2',\r\n            total: '400.00',\r\n            stock: '32'\r\n        },\r\n        {\r\n            image: '83',\r\n            name: 'Nike Pumps',\r\n            description: 'Apple\\'s latest headphones.',\r\n            cost: '200.00',\r\n            qty: '1',\r\n            total: '200.00',\r\n            stock: '8'\r\n        }\r\n    ];\r\n\r\n    // Handle action button\r\n    const handleActionButton = () => {\r\n        const buttons = document.querySelectorAll('[data-kt-table-widget-4=\"expand_row\"]');\r\n\r\n        // Sample row items counter --- for demo purpose only, remove this variable in your project\r\n        const rowItems = [3, 1, 3, 1, 2, 1];\r\n\r\n        buttons.forEach((button, index) => {\r\n            button.addEventListener('click', e => {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                const row = button.closest('tr');\r\n                const rowClasses = ['isOpen', 'border-bottom-0'];\r\n\r\n                // Get total number of items to generate --- for demo purpose only, remove this code snippet in your project\r\n                const demoData = [];\r\n                for (var j = 0; j < rowItems[index]; j++) {\r\n                    demoData.push(data[j]);\r\n                }\r\n                // End of generating demo data\r\n\r\n                // Handle subtable expanded state\r\n                if (row.classList.contains('isOpen')) {\r\n                    // Remove all subtables from current order row\r\n                    while (row.nextSibling && row.nextSibling.getAttribute('data-kt-table-widget-4') === 'subtable_template') {\r\n                        row.nextSibling.parentNode.removeChild(row.nextSibling);\r\n                    }\r\n                    row.classList.remove(...rowClasses);\r\n                    button.classList.remove('active');\r\n                } else {\r\n                    populateTemplate(demoData, row);\r\n                    row.classList.add(...rowClasses);\r\n                    button.classList.add('active');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Populate template with content/data -- content/data can be replaced with relevant data from database or API\r\n    const populateTemplate = (data, target) => {\r\n        data.forEach((d, index) => {\r\n            // Clone template node\r\n            const newTemplate = template.cloneNode(true);\r\n\r\n            // Stock badges\r\n            const lowStock = `<div class=\"badge badge-light-warning\">Low Stock</div>`;\r\n            const inStock = `<div class=\"badge badge-light-success\">In Stock</div>`;\r\n\r\n            // Select data elements\r\n            const image = newTemplate.querySelector('[data-kt-table-widget-4=\"template_image\"]');\r\n            const name = newTemplate.querySelector('[data-kt-table-widget-4=\"template_name\"]');\r\n            const description = newTemplate.querySelector('[data-kt-table-widget-4=\"template_description\"]');\r\n            const cost = newTemplate.querySelector('[data-kt-table-widget-4=\"template_cost\"]');\r\n            const qty = newTemplate.querySelector('[data-kt-table-widget-4=\"template_qty\"]');\r\n            const total = newTemplate.querySelector('[data-kt-table-widget-4=\"template_total\"]');\r\n            const stock = newTemplate.querySelector('[data-kt-table-widget-4=\"template_stock\"]');\r\n\r\n            // Populate elements with data\r\n            const imageSrc = image.getAttribute('data-kt-src-path');\r\n            image.setAttribute('src', imageSrc + d.image + '.gif');\r\n            name.innerText = d.name;\r\n            description.innerText = d.description;\r\n            cost.innerText = d.cost;\r\n            qty.innerText = d.qty;\r\n            total.innerText = d.total;\r\n            if (d.stock > 10) {\r\n                stock.innerHTML = inStock;\r\n            } else {\r\n                stock.innerHTML = lowStock;\r\n            }\r\n\r\n            // New template border controller\r\n            // When only 1 row is available\r\n            if (data.length === 1) {\r\n                //let borderClasses = ['rounded', 'rounded-end-0'];\r\n                //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\r\n                //borderClasses = ['rounded', 'rounded-start-0'];\r\n                //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\r\n\r\n                // Remove bottom border\r\n                //newTemplate.classList.add('border-bottom-0');\r\n            } else {\r\n                // When multiple rows detected\r\n                if (index === (data.length - 1)) { // first row\r\n                    //let borderClasses = ['rounded-start', 'rounded-bottom-0'];\r\n                   // newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\r\n                    //borderClasses = ['rounded-end', 'rounded-bottom-0'];\r\n                    //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\r\n                }\r\n                if (index === 0) { // last row\r\n                    //let borderClasses = ['rounded-start', 'rounded-top-0'];\r\n                    //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\r\n                    //borderClasses = ['rounded-end', 'rounded-top-0'];\r\n                    //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\r\n\r\n                    // Remove bottom border on last row\r\n                    //newTemplate.classList.add('border-bottom-0');\r\n                }\r\n            }\r\n\r\n            // Insert new template into table\r\n            const tbody = table.querySelector('tbody');\r\n            tbody.insertBefore(newTemplate, target.nextSibling);\r\n        });\r\n    }\r\n\r\n    // Reset subtable\r\n    const resetSubtable = () => {\r\n        const subtables = document.querySelectorAll('[data-kt-table-widget-4=\"subtable_template\"]');\r\n        subtables.forEach(st => {\r\n            st.parentNode.removeChild(st);\r\n        });\r\n\r\n        const rows = table.querySelectorAll('tbody tr');\r\n        rows.forEach(r => {\r\n            r.classList.remove('isOpen');\r\n            if (r.querySelector('[data-kt-table-widget-4=\"expand_row\"]')) {\r\n                r.querySelector('[data-kt-table-widget-4=\"expand_row\"]').classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            table = document.querySelector('#kt_table_widget_4_table');\r\n\r\n            if (!table) {\r\n                return;\r\n            }\r\n\r\n            initDatatable();\r\n            handleSearchDatatable();\r\n            handleStatusFilter();\r\n            handleActionButton();\r\n        }\r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTTablesWidget4;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTTablesWidget4.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTTablesWidget5 = function () {\r\n    var table;\r\n    var datatable;\r\n\r\n    // Private methods\r\n    const initDatatable = () => {\r\n        // Set date data order\r\n        const tableRows = table.querySelectorAll('tbody tr');\r\n\r\n        tableRows.forEach(row => {\r\n            const dateRow = row.querySelectorAll('td');\r\n            const realDate = moment(dateRow[2].innerHTML, \"MMM DD, YYYY\").format(); // select date from 3rd column in table\r\n            dateRow[2].setAttribute('data-order', realDate);\r\n        });\r\n\r\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\r\n        datatable = $(table).DataTable({\r\n            \"info\": false,\r\n            'order': [],\r\n            \"lengthChange\": false,\r\n            'pageLength': 6,\r\n            'paging': false,\r\n            'columnDefs': [\r\n                { orderable: false, targets: 1 }, // Disable ordering on column 1 (product id)\r\n            ]\r\n        });\r\n    }\r\n\r\n    // Handle status filter\r\n    const handleStatusFilter = () => {\r\n        const select = document.querySelector('[data-kt-table-widget-5=\"filter_status\"]');\r\n\r\n        $(select).on('select2:select', function (e) {\r\n            const value = $(this).val();\r\n            if (value === 'Show All') {\r\n                datatable.search('').draw();\r\n            } else {\r\n                datatable.search(value).draw();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            table = document.querySelector('#kt_table_widget_5_table');\r\n\r\n            if (!table) {\r\n                return;\r\n            }\r\n\r\n            initDatatable();\r\n            handleStatusFilter();\r\n        }\r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTTablesWidget5;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTTablesWidget5.init();\r\n});\r\n","\"use strict\";\r\n\r\n// Class definition\r\nvar KTTimelineWidget1 = function () {\r\n    // Private methods\r\n    // Day timeline\r\n    const initTimelineDay = () => {\r\n        // Detect element\r\n        const element = document.querySelector('#kt_timeline_widget_1_1');\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        if(element.innerHTML){\r\n            return;\r\n        }\r\n\r\n        // Set variables\r\n        var now = Date.now();\r\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\r\n\r\n        // Build vis-timeline datasets\r\n        var groups = new vis.DataSet([\r\n            {\r\n                id: \"research\",\r\n                content: \"Research\",\r\n                order: 1\r\n            },\r\n            {\r\n                id: \"qa\",\r\n                content: \"Phase 2.6 QA\",\r\n                order: 2\r\n            },\r\n            {\r\n                id: \"ui\",\r\n                content: \"UI Design\",\r\n                order: 3\r\n            },\r\n            {\r\n                id: \"dev\",\r\n                content: \"Development\",\r\n                order: 4\r\n            }\r\n        ]);\r\n\r\n\r\n        var items = new vis.DataSet([\r\n            {\r\n                id: 1,\r\n                group: 'research',\r\n                start: now,\r\n                end: moment(now).add(1.5, 'hours'),\r\n                content: 'Meeting',\r\n                progress: \"60%\",\r\n                color: 'primary',\r\n                users: [\r\n                    'avatars/300-6.jpg',\r\n                    'avatars/300-1.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                group: 'qa',\r\n                start: moment(now).add(1, 'hours'),\r\n                end: moment(now).add(2, 'hours'),\r\n                content: 'Testing',\r\n                progress: \"47%\",\r\n                color: 'success',\r\n                users: [\r\n                    'avatars/300-2.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                group: 'ui',\r\n                start: moment(now).add(30, 'minutes'),\r\n                end: moment(now).add(2.5, 'hours'),\r\n                content: 'Landing page',\r\n                progress: \"55%\",\r\n                color: 'danger',\r\n                users: [\r\n                    'avatars/300-5.jpg',\r\n                    'avatars/300-20.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                group: 'dev',\r\n                start: moment(now).add(1.5, 'hours'),\r\n                end: moment(now).add(3, 'hours'),\r\n                content: 'Products module',\r\n                progress: \"75%\",\r\n                color: 'info',\r\n                users: [\r\n                    'avatars/300-23.jpg',\r\n                    'avatars/300-12.jpg',\r\n                    'avatars/300-9.jpg'\r\n                ]\r\n            },\r\n        ]);\r\n\r\n        // Set vis-timeline options\r\n        var options = {\r\n            zoomable: false,\r\n            moveable: false,\r\n            selectable: false,\r\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            margin: {\r\n                item: {\r\n                    horizontal: 10,\r\n                    vertical: 35\r\n                }\r\n            },\r\n\r\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            showCurrentTime: false,\r\n\r\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            xss: {\r\n                disabled: false,\r\n                filterOptions: {\r\n                    whiteList: {\r\n                        div: ['class', 'style'],\r\n                        img: ['src', 'alt'],\r\n                        a: ['href', 'class']\r\n                    },\r\n                },\r\n            },\r\n            // specify a template for the items\r\n            template: function (item) {\r\n                // Build users group\r\n                const users = item.users;\r\n                let userTemplate = '';\r\n                users.forEach(user => {\r\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\r\n                });\r\n\r\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\r\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\r\n        \r\n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\r\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\r\n                            ${userTemplate}\r\n                        </div>\r\n        \r\n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\r\n                    </div>\r\n        \r\n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\r\n                        ${item.progress}\r\n                    </div>\r\n                </div>        \r\n                `;\r\n            },\r\n\r\n            // Remove block ui on initial draw\r\n            onInitialDrawComplete: function () {\r\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\r\n                const blockUI = KTBlockUI.getInstance(target);\r\n\r\n                if (blockUI.isBlocked()) {\r\n                    setTimeout(() => {\r\n                        blockUI.release();\r\n                    }, 1000);      \r\n                }\r\n            }\r\n        };\r\n\r\n        // Init vis-timeline\r\n        const timeline = new vis.Timeline(element, items, groups, options);\r\n\r\n        // Prevent infinite loop draws\r\n        timeline.on(\"currentTimeTick\", () => {            \r\n            // After fired the first time we un-subscribed\r\n            timeline.off(\"currentTimeTick\");\r\n        });\r\n    }\r\n\r\n    // Week timeline\r\n    const initTimelineWeek = () => {\r\n        // Detect element\r\n        const element = document.querySelector('#kt_timeline_widget_1_2');\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        if(element.innerHTML){\r\n            return;\r\n        }\r\n\r\n        // Set variables\r\n        var now = Date.now();\r\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\r\n\r\n        // Build vis-timeline datasets\r\n        var groups = new vis.DataSet([\r\n            {\r\n                id: 1,\r\n                content: \"Research\",\r\n                order: 1\r\n            },\r\n            {\r\n                id: 2,\r\n                content: \"Phase 2.6 QA\",\r\n                order: 2\r\n            },\r\n            {\r\n                id: 3,\r\n                content: \"UI Design\",\r\n                order: 3\r\n            },\r\n            {\r\n                id: 4,\r\n                content: \"Development\",\r\n                order: 4\r\n            }\r\n        ]);\r\n\r\n\r\n        var items = new vis.DataSet([\r\n            {\r\n                id: 1,\r\n                group: 1,\r\n                start: now,\r\n                end: moment(now).add(7, 'days'),\r\n                content: 'Framework',\r\n                progress: \"71%\",\r\n                color: 'primary',\r\n                users: [\r\n                    'avatars/300-6.jpg',\r\n                    'avatars/300-1.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                group: 2,\r\n                start: moment(now).add(7, 'days'),\r\n                end: moment(now).add(14, 'days'),\r\n                content: 'Accessibility',\r\n                progress: \"84%\",\r\n                color: 'success',\r\n                users: [\r\n                    'avatars/300-2.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                group: 3,\r\n                start: moment(now).add(3, 'days'),\r\n                end: moment(now).add(20, 'days'),\r\n                content: 'Microsites',\r\n                progress: \"69%\",\r\n                color: 'danger',\r\n                users: [\r\n                    'avatars/300-5.jpg',\r\n                    'avatars/300-20.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                group: 4,\r\n                start: moment(now).add(10, 'days'),\r\n                end: moment(now).add(21, 'days'),\r\n                content: 'Deployment',\r\n                progress: \"74%\",\r\n                color: 'info',\r\n                users: [\r\n                    'avatars/300-23.jpg',\r\n                    'avatars/300-12.jpg',\r\n                    'avatars/300-9.jpg'\r\n                ]\r\n            },\r\n        ]);\r\n\r\n        // Set vis-timeline options\r\n        var options = {\r\n            zoomable: false,\r\n            moveable: false,\r\n            selectable: false,\r\n\r\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            margin: {\r\n                item: {\r\n                    horizontal: 10,\r\n                    vertical: 35\r\n                }\r\n            },\r\n\r\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            showCurrentTime: false,\r\n\r\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            xss: {\r\n                disabled: false,\r\n                filterOptions: {\r\n                    whiteList: {\r\n                        div: ['class', 'style'],\r\n                        img: ['src', 'alt'],\r\n                        a: ['href', 'class']\r\n                    },\r\n                },\r\n            },\r\n            // specify a template for the items\r\n            template: function (item) {\r\n                // Build users group\r\n                const users = item.users;\r\n                let userTemplate = '';\r\n                users.forEach(user => {\r\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\r\n                });\r\n\r\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\r\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\r\n        \r\n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\r\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\r\n                            ${userTemplate}\r\n                        </div>\r\n        \r\n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\r\n                    </div>\r\n        \r\n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\r\n                        ${item.progress}\r\n                    </div>\r\n                </div>        \r\n                `;\r\n            },\r\n\r\n            // Remove block ui on initial draw\r\n            onInitialDrawComplete: function () {\r\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\r\n                const blockUI = KTBlockUI.getInstance(target);\r\n\r\n                if (blockUI.isBlocked()) {\r\n                    setTimeout(() => {\r\n                        blockUI.release();\r\n                    }, 1000);      \r\n                }\r\n            }\r\n        };\r\n\r\n        // Init vis-timeline\r\n        const timeline = new vis.Timeline(element, items, groups, options);\r\n\r\n        // Prevent infinite loop draws\r\n        timeline.on(\"currentTimeTick\", () => {            \r\n            // After fired the first time we un-subscribed\r\n            timeline.off(\"currentTimeTick\");\r\n        });\r\n    }\r\n\r\n    // Month timeline\r\n    const initTimelineMonth = () => {\r\n        // Detect element\r\n        const element = document.querySelector('#kt_timeline_widget_1_3');\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        if(element.innerHTML){\r\n            return;\r\n        }\r\n\r\n        // Set variables\r\n        var now = Date.now();\r\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\r\n\r\n        // Build vis-timeline datasets\r\n        var groups = new vis.DataSet([\r\n            {\r\n                id: \"research\",\r\n                content: \"Research\",\r\n                order: 1\r\n            },\r\n            {\r\n                id: \"qa\",\r\n                content: \"Phase 2.6 QA\",\r\n                order: 2\r\n            },\r\n            {\r\n                id: \"ui\",\r\n                content: \"UI Design\",\r\n                order: 3\r\n            },\r\n            {\r\n                id: \"dev\",\r\n                content: \"Development\",\r\n                order: 4\r\n            }\r\n        ]);\r\n\r\n\r\n        var items = new vis.DataSet([\r\n            {\r\n                id: 1,\r\n                group: 'research',\r\n                start: now,\r\n                end: moment(now).add(2, 'months'),\r\n                content: 'Tags',\r\n                progress: \"79%\",\r\n                color: 'primary',\r\n                users: [\r\n                    'avatars/300-6.jpg',\r\n                    'avatars/300-1.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                group: 'qa',\r\n                start: moment(now).add(0.5, 'months'),\r\n                end: moment(now).add(5, 'months'),\r\n                content: 'Testing',\r\n                progress: \"64%\",\r\n                color: 'success',\r\n                users: [\r\n                    'avatars/300-2.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                group: 'ui',\r\n                start: moment(now).add(2, 'months'),\r\n                end: moment(now).add(6.5, 'months'),\r\n                content: 'Media',\r\n                progress: \"82%\",\r\n                color: 'danger',\r\n                users: [\r\n                    'avatars/300-5.jpg',\r\n                    'avatars/300-20.jpg'\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                group: 'dev',\r\n                start: moment(now).add(4, 'months'),\r\n                end: moment(now).add(7, 'months'),\r\n                content: 'Plugins',\r\n                progress: \"58%\",\r\n                color: 'info',\r\n                users: [\r\n                    'avatars/300-23.jpg',\r\n                    'avatars/300-12.jpg',\r\n                    'avatars/300-9.jpg'\r\n                ]\r\n            },\r\n        ]);\r\n\r\n        // Set vis-timeline options\r\n        var options = {\r\n            zoomable: false,\r\n            moveable: false,\r\n            selectable: false,\r\n\r\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            margin: {\r\n                item: {\r\n                    horizontal: 10,\r\n                    vertical: 35\r\n                }\r\n            },\r\n\r\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            showCurrentTime: false,\r\n\r\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\r\n            xss: {\r\n                disabled: false,\r\n                filterOptions: {\r\n                    whiteList: {\r\n                        div: ['class', 'style'],\r\n                        img: ['src', 'alt'],\r\n                        a: ['href', 'class']\r\n                    },\r\n                },\r\n            },\r\n            // specify a template for the items\r\n            template: function (item) {\r\n                // Build users group\r\n                const users = item.users;\r\n                let userTemplate = '';\r\n                users.forEach(user => {\r\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\r\n                });\r\n\r\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\r\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\r\n        \r\n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\r\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\r\n                            ${userTemplate}\r\n                        </div>\r\n        \r\n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\r\n                    </div>\r\n        \r\n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\r\n                        ${item.progress}\r\n                    </div>\r\n                </div>        \r\n                `;\r\n            },\r\n\r\n            // Remove block ui on initial draw\r\n            onInitialDrawComplete: function () {\r\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\r\n                const blockUI = KTBlockUI.getInstance(target);\r\n\r\n                if (blockUI.isBlocked()) {\r\n                    setTimeout(() => {\r\n                        blockUI.release();\r\n                    }, 1000);                    \r\n                }\r\n            }\r\n        };\r\n\r\n        // Init vis-timeline\r\n        const timeline = new vis.Timeline(element, items, groups, options);\r\n\r\n        // Prevent infinite loop draws\r\n        timeline.on(\"currentTimeTick\", () => {            \r\n            // After fired the first time we un-subscribed\r\n            timeline.off(\"currentTimeTick\");\r\n        });\r\n    }\r\n\r\n    // Handle BlockUI\r\n    const handleBlockUI = () => {\r\n        // Select block ui elements\r\n        const elements = document.querySelectorAll('[data-kt-timeline-widget-1-blockui=\"true\"]');\r\n\r\n        // Init block ui\r\n        elements.forEach(element => {\r\n            const blockUI = new KTBlockUI(element, {\r\n                overlayClass: \"bg-body\",\r\n            });\r\n\r\n            blockUI.block();\r\n        });\r\n    }\r\n\r\n    // Handle tabs visibility\r\n    const tabsVisibility = () => {\r\n        const tabs = document.querySelectorAll('[data-kt-timeline-widget-1=\"tab\"]');\r\n\r\n        tabs.forEach(tab => {\r\n            tab.addEventListener('shown.bs.tab', e => {\r\n                // Week tab\r\n                if(tab.getAttribute('href') === '#kt_timeline_widget_1_tab_week'){\r\n                    initTimelineWeek();\r\n                }\r\n\r\n                // Month tab\r\n                if(tab.getAttribute('href') === '#kt_timeline_widget_1_tab_month'){\r\n                    initTimelineMonth();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initTimelineDay();\r\n            handleBlockUI();\r\n            tabsVisibility();\r\n        }\r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTTimelineWidget1;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTTimelineWidget1.init();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"../demo1/src/js/widgets/cards/widget-1.js\");\n__webpack_require__(\"../demo1/src/js/widgets/cards/widget-10.js\");\n__webpack_require__(\"../demo1/src/js/widgets/cards/widget-4.js\");\n__webpack_require__(\"../demo1/src/js/widgets/cards/widget-6.js\");\n__webpack_require__(\"../demo1/src/js/widgets/cards/widget-8.js\");\n__webpack_require__(\"../demo1/src/js/widgets/cards/widget-9.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-1.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-10.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-11.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-12.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-13.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-14.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-15.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-16.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-17.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-2.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-3.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-4.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-5.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-6.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-7.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-8.js\");\n__webpack_require__(\"../demo1/src/js/widgets/charts/widget-9.js\");\n__webpack_require__(\"../demo1/src/js/widgets/maps/widget-1.js\");\n__webpack_require__(\"../demo1/src/js/widgets/tables/widget-3.js\");\n__webpack_require__(\"../demo1/src/js/widgets/tables/widget-4.js\");\n__webpack_require__(\"../demo1/src/js/widgets/tables/widget-5.js\");\nvar __webpack_exports__ = __webpack_require__(\"../demo1/src/js/widgets/timeline/widget-1.js\");\n",""],"names":[],"sourceRoot":""}